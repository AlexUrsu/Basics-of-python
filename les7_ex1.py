# Занятие 7. упражнение 1
# Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
# 31    32         3    5    32        3    5    8    3
# 37    43         2    4    6         8    3    7    1
# 51    86        -1   64   -8
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.

class Matrix(object):
    def __init__(self, mtr):
        self.mtr = mtr

    def __str__(self):
        x = ''
        for i in self.mtr:
            c = map(str, i)
            x = x + ' '.join(c) + '\n'
        return x

    def __add__(self, other):
        new_mtrx = Matrix([])
        with_m1 = len(self.mtr)
        len_m1 = len(self.mtr[0])
        with_m2 = len(other.mtr)
        len_m2 = len(other.mtr[0])
        if with_m1 == with_m2 and len_m1 == len_m2:
            for i in range(with_m1):
                ls = []
                for x in range(len_m1):
                    ls.append(self.mtr[i][x]+other.mtr[i][x])
                new_mtrx.mtr.append(ls)
            return new_mtrx
        else:
            print('Матрицы разные, объединить их не получается :(') # матрициы разной размерности не соединятся, я сделал проверку через условие


m1 = Matrix([[3, 5, 1], [2, 4, 6], [1, 4, 8]])
m2 = Matrix([[7, 5, 9], [8, 6, 4], [9, 6, 2]])

print(m1+m2)

print(m1)
print(m2)
















